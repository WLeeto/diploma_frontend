{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nethology_diploma\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n  let contextData = {};\n  let loginUser = async e => {\n    let response = await fetch('url', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"zY+G5N+8H7wFCqhkyy+nfU1QpSs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","user","setUser","contextData","loginUser","e","response","fetch","method","headers","body","JSON","stringify","username","target","value","password","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Nethology_diploma/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n    let [authTokens, setAuthTokens] = useState(null)\r\n    let [user, setUser] = useState(null)\r\n\r\n    let contextData = {\r\n\r\n    }\r\n\r\n    let loginUser = async (e) => {\r\n        let response = await fetch('url', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: e.target.username.value,\r\n                password:  e.target.password.value\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{  }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,eAAeK,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE1C,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAI,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpC,IAAIY,WAAW,GAAG,CAElB,CAAC;EAED,IAAIC,SAAS,GAAG,MAAOC,CAAC,IAAK;IACzB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAK,EAAE;MAC9BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAER,CAAC,CAACS,MAAM,CAACD,QAAQ,CAACE,KAAK;QACjCC,QAAQ,EAAGX,CAAC,CAACS,MAAM,CAACE,QAAQ,CAACD;MACjC,CAAC;IACL,CAAC,CAAC;EACN,CAAC;EAED,oBACIrB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACF,KAAK,EAAE,CAAG,CAAE;IAAAlB,QAAA,EAC7BA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAvB,EAAA,CA3BYF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}