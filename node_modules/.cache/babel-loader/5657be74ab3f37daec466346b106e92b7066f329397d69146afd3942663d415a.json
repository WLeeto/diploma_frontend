{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nethology_diploma\\\\frontend\\\\src\\\\pages\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  useEffectect(() => {\n    const fetchData = async () => {\n      try {\n        if (!authJWT) {\n          throw new Error('No auth token found');\n        }\n        const response = await fetch(endpoints.GETUSERFILES, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${JSON.parse(authJWT).access}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0438\\u0447\\u043A\\u0430 \\u0430\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"9TzeFiKa5LfPVWs8muHEhjYx92E=\", true);\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","AdminPage","_s","useEffectect","fetchData","authJWT","Error","response","fetch","endpoints","GETUSERFILES","method","headers","JSON","parse","access","ok","status","result","json","setData","error","setError","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Nethology_diploma/frontend/src/pages/AdminPage.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\n\r\nconst AdminPage = () => {\r\n\r\n  useEffectect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        if (!authJWT) {\r\n          throw new Error('No auth token found');\r\n        }\r\n\r\n        const response = await fetch(endpoints.GETUSERFILES, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${JSON.parse(authJWT).access}`\r\n          }\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <span>Страничка администратора</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtBC,YAAY,CAAC,MAAM;IACjB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,IAAI,CAACC,OAAO,EAAE;UACZ,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;QACxC;QAEA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,SAAS,CAACC,YAAY,EAAE;UACnDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,UAAUC,IAAI,CAACC,KAAK,CAACT,OAAO,CAAC,CAACU,MAAM;UACvD;QACF,CAAC,CAAC;QAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;UAChB,MAAM,IAAIV,KAAK,CAAC,uBAAuBC,QAAQ,CAACU,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMC,MAAM,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QACpCC,OAAO,CAACF,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACE,OAAO,CAAC;MACzB;IACF,CAAC;IAEDnB,SAAS,CAAC,CAAC;EACb,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAAwB,QAAA,EAAM;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAAA1B,EAAA,CApCKD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAsCf,eAAeA,SAAS;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}