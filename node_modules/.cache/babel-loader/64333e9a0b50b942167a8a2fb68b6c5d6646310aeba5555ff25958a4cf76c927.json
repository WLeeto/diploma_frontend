{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nethology_diploma\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { endpoints } from '../api/endpoints';\nimport { jwtDecode } from 'jwt-decode';\nimport { fetchRequest } from '../api/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authToken') ? JSON.parse(localStorage.getItem('authToken')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authToken') ? jwtDecode(localStorage.getItem('authToken')) : null);\n  const navigate = useNavigate();\n  let updateTokens;\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetchRequest(endpoints.GETTOKEN, 'POST', JSON.stringify({\n      username: e.target.username.value,\n      password: e.target.password.value\n    }));\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authToken', JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert('Auth failed, check server');\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authToken');\n    navigate('/login');\n  };\n  let updateToken = async () => {\n    let response = await fetchRequest(endpoints.REFRESHTOKEN, 'POST', JSON.stringify({\n      refresh: authTokens.refresh\n    }));\n    let data = await response.json();\n    if (data.status === 200) {}\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"EWegHTh/ylpAr7SC+2usYd2lXQ0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","endpoints","jwtDecode","fetchRequest","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","navigate","updateTokens","loginUser","e","preventDefault","response","GETTOKEN","stringify","username","target","value","password","data","json","status","access","setItem","alert","logoutUser","removeItem","updateToken","REFRESHTOKEN","refresh","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Nethology_diploma/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { endpoints } from '../api/endpoints'\r\n\r\nimport { jwtDecode } from 'jwt-decode'\r\nimport { fetchRequest } from '../api/requests'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n    let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authToken') ? JSON.parse(localStorage.getItem('authToken')) : null)\r\n    let [user, setUser] = useState(() => localStorage.getItem('authToken') ? jwtDecode(localStorage.getItem('authToken')) : null)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    let updateTokens\r\n\r\n    let loginUser = async (e) => {\r\n        e.preventDefault()\r\n\r\n        let response = await fetchRequest(\r\n            endpoints.GETTOKEN,\r\n            'POST',\r\n            JSON.stringify({\r\n                        username: e.target.username.value,\r\n                        password:  e.target.password.value\r\n                    })\r\n        )\r\n\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n            localStorage.setItem('authToken', JSON.stringify(data))\r\n            navigate('/')\r\n        } else {\r\n            alert('Auth failed, check server')\r\n        }\r\n    }\r\n\r\n    let logoutUser = () => {\r\n        setAuthTokens(null)\r\n        setUser(null)\r\n        localStorage.removeItem('authToken')\r\n        navigate('/login')\r\n    }\r\n\r\n    let updateToken = async() => {\r\n        let response = await fetchRequest(\r\n            endpoints.REFRESHTOKEN,\r\n            'POST',\r\n            JSON.stringify({\r\n                        refresh: authTokens.refresh\r\n                    })\r\n        )\r\n        let data = await response.json()\r\n\r\n        if (data.status === 200) {\r\n\r\n        }\r\n    }\r\n\r\n    let contextData = {\r\n        user: user,\r\n        loginUser: loginUser,\r\n        logoutUser: logoutUser,\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={ contextData }>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}