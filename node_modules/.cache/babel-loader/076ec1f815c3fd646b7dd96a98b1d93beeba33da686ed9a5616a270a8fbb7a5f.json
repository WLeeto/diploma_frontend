{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nethology_diploma\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { endpoints } from '../api/endpoints';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  localStorage.getItem();\n  let [authTokens, setAuthTokens] = useState(null);\n  let [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch(endpoints.GETTOKEN, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwtDecode(data.access));\n      localStorage.setItem('authToken', JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert('Auth failed, check server');\n    }\n  };\n  let contextData = {\n    user: user,\n    loginUser: loginUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"CQraQm0Fw9B8sOZAN63sTjtLtHk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useNavigate","endpoints","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","localStorage","getItem","authTokens","setAuthTokens","user","setUser","navigate","loginUser","e","preventDefault","response","fetch","GETTOKEN","method","headers","body","JSON","stringify","username","target","value","password","data","json","status","access","setItem","alert","contextData","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Nethology_diploma/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { endpoints } from '../api/endpoints'\r\n\r\nimport { jwtDecode } from 'jwt-decode'\r\n\r\nconst AuthContext = createContext()\r\n\r\nexport default AuthContext\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n\r\n    localStorage.getItem()\r\n    let [authTokens, setAuthTokens] = useState(null)\r\n    let [user, setUser] = useState(null)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    let loginUser = async (e) => {\r\n        e.preventDefault()\r\n        let response = await fetch(endpoints.GETTOKEN, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: e.target.username.value,\r\n                password:  e.target.password.value\r\n            })\r\n        })\r\n\r\n        let data = await response.json()\r\n\r\n        if (response.status === 200) {\r\n            setAuthTokens(data)\r\n            setUser(jwtDecode(data.access))\r\n            localStorage.setItem('authToken', JSON.stringify(data))\r\n            navigate('/')\r\n        } else {\r\n            alert('Auth failed, check server')\r\n        }\r\n    }\r\n\r\n    let contextData = {\r\n        user: user,\r\n        loginUser: loginUser\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={ contextData }>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,SAASC,SAAS,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,eAAeQ,WAAW;AAE1B,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAE1CC,YAAY,CAACC,OAAO,CAAC,CAAC;EACtB,IAAI,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAI,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,IAAIgB,SAAS,GAAG,MAAOC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACnB,SAAS,CAACoB,QAAQ,EAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEV,CAAC,CAACW,MAAM,CAACD,QAAQ,CAACE,KAAK;QACjCC,QAAQ,EAAGb,CAAC,CAACW,MAAM,CAACE,QAAQ,CAACD;MACjC,CAAC;IACL,CAAC,CAAC;IAEF,IAAIE,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAEhC,IAAIb,QAAQ,CAACc,MAAM,KAAK,GAAG,EAAE;MACzBrB,aAAa,CAACmB,IAAI,CAAC;MACnBjB,OAAO,CAACZ,SAAS,CAAC6B,IAAI,CAACG,MAAM,CAAC,CAAC;MAC/BzB,YAAY,CAAC0B,OAAO,CAAC,WAAW,EAAEV,IAAI,CAACC,SAAS,CAACK,IAAI,CAAC,CAAC;MACvDhB,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACHqB,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ,CAAC;EAED,IAAIC,WAAW,GAAG;IACdxB,IAAI,EAAEA,IAAI;IACVG,SAAS,EAAEA;EACf,CAAC;EAED,oBACIZ,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACT,KAAK,EAAGQ,WAAa;IAAA9B,QAAA,EACtCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAAlC,EAAA,CA3CYF,YAAY;EAAA,QAMJN,WAAW;AAAA;AAAA2C,EAAA,GANnBrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}